/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <220>;
};

&mt {
    quick_tap_ms = <220>;
};

/ {
    macros {
        js_arrow: js_arrow {
            compatible = "zmk,behavior-macro";
            label = "JS_ARROW";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings = <&macro_tap>, <&kp EQUAL &kp GREATER_THAN &kp SPACE>;
        };

        swapH: swapH {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(NUMBER_7)>, <&macro_tap>, <&kp H>;

            label = "SWAPH";
        };

        swapJ: swapJ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(NUMBER_7)>, <&macro_tap>, <&kp J>;

            label = "SWAPJ";
        };

        swapK: swapK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(NUMBER_7)>, <&macro_tap>, <&kp K>;

            label = "SWAPK";
        };

        swapL: swapL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(NUMBER_7)>, <&macro_tap>, <&kp L>;

            label = "SWAPL";
        };

        move1: move1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(NUMBER_7)>,
                <&macro_tap>,
                <&kp LC(N7)>;

            label = "MOVE1";
        };

        move2: move2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(NUMBER_7)>,
                <&macro_tap>,
                <&kp LC(N8)>;

            label = "MOVE2";
        };

        move3: move3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(NUMBER_7)>,
                <&macro_tap>,
                <&kp LC(NUMBER_9)>;

            label = "MOVE3";
        };

        move4: move4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(NUMBER_7)>,
                <&macro_tap>,
                <&kp LC(N0)>;

            label = "MOVE4";
        };

        move5: move5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(NUMBER_7)>,
                <&macro_tap>,
                <&kp LC(RETURN)>;

            label = "MOVE5";
        };

        move6: move6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LC(NUMBER_7)>,
                <&macro_tap>,
                <&kp LA(N7)>;

            label = "MOVE6";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        lang_switch {
            bindings = <&kp LC(CARET)>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| CTRL/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTRL/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                             | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&lt 3 RIGHT_BRACKET  &kp Q  &kp W  &kp E      &kp R                &kp T           &kp Y         &kp U            &kp I      &kp O    &kp P     &mt RWIN LBKT
&mt LCTRL ESCAPE     &kp A  &kp S  &kp D      &kp F                &kp G           &kp H         &kp J            &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT BSLH        &kp Z  &kp X  &kp C      &kp V                &kp B           &kp N         &kp M            &kp COMMA  &kp DOT  &kp FSLH  &mt RALT MINUS
                                   &lt 2 TAB  &mt LSHFT BACKSPACE  &lt 1 ESCAPE    &lt 1 RETURN  &mt RSHFT SPACE  &lt 2 DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            //|LGUI/CAPS |  *  |  7 |  8  |  9  |  +  |    |  !  |  @  |  #  |  $  |  %  | RGUI/F1 |
            //|CTRL/MENU |  /  |  4 |  5  |  6  |  -  |    |  ^  |  &  |  *  |  (  |  )  | CTRL/F2 |
            //|  LALT/=  |  0  |  1 |  4  |  3  |  .  |    |  ls |  F4 |  F5 |  F6 |  F7 | RALT/F3 |
            //                      | ADJ | ___ | ___ |    | ___ | ___ | ADJ |

            bindings = <
&kp LGUI      &kp GRAVE    &kp EXCLAMATION  &kp AT_SIGN    &kp HASH                  &js_arrow                &kp NUMBER_0  &kp NUMBER_7           &kp NUMBER_8  &kp NUMBER_9  &kp MINUS   &mt RIGHT_GUI DOLLAR
&kp LCTRL     &kp PERCENT  &kp CARET        &kp AMPERSAND  &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS    &kp ASTERISK  &kp NUMBER_4           &kp NUMBER_5  &kp NUMBER_6  &kp PLUS    &mt RIGHT_CONTROL EQUAL
&kp LEFT_ALT  &kp COMMA    &kp TILDE        &kp BACKSLASH  &kp UNDERSCORE            &kp LG(SPACE)            &kp SLASH     &kp NUMBER_1           &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &mt RIGHT_ALT RS(G)
                                            &lt 5 TAB      &mt LEFT_SHIFT BACKSPACE  &trans                   &trans        &mt RIGHT_SHIFT SPACE  &lt 5 DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            //| LGUI |  VOLU  |  PGUP  | PLAY | HOME | ___  |            | ___  | HOME | PLAY| PGUP | VOLU | RGUI |
            //| CTRL |  VOLD  |  LEFT  |  UP  | DOWN | RGHT |            | RGHT | DOWN | UP  | LEFT | VOLD | CTRL | 
            //| LALT |  MUTE  |  PGDN  |  ___ | END  | ___  |            | ___  | END  | ___ | PGDN | MUTE | RALT |
            //                          | ___ | ___  | ADJ  |            | ADJ  | ___  | ___ |

            bindings = <
&mt LEFT_GUI CAPS      &kp KP_MULTIPLY  &kp N7  &kp N8  &kp N9  &lt 5 PLUS      &none      &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp C_VOL_UP  &mt RIGHT_GUI KP_NUMLOCK
&kp LCTRL              &kp KP_SLASH     &kp N4  &kp N5  &kp N6  &kp KP_MINUS    &none      &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp C_VOL_DN  &mt RCTRL KP_ENTER
&mt LEFT_ALT KP_EQUAL  &kp KP_NUMBER_0  &kp N1  &kp N2  &kp N3  &kp KP_DOT      &kp KP_N0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp C_MUTE    &kp RALT
                                                &trans  &trans  &lt 5 RET       &lt 5 ESC  &trans     &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans           &kp LG(LC(NUMBER_7))  &kp LG(LC(NUMBER_8))  &kp LG(LC(NUMBER_9))  &kp LG(LC(NUMBER_0))  &kp LG(LC(RET))  &none
&trans  &trans  &trans  &trans  &trans  &trans           &kp LA(LC(NUMBER_7))  &kp LA(LC(NUMBER_8))  &kp LA(LC(NUMBER_9))  &kp LA(LC(NUMBER_0))  &kp LA(LC(RET))  &kp LA(LC(SPACE))
&trans  &trans  &trans  &trans  &trans  &trans           &kp LG(H)             &kp LG(J)             &kp LG(K)             &kp LG(L)             &none            &none
                        &trans  &mo 4   &kp LA(LC(H))    &kp LA(LC(L))         &kp LA(NUMBER_7)      &kp LA(NUMBER_8)
            >;
        };

        move {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &swapH  &swapJ  &swapK  &swapL  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            //| BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR |
            //| BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //|pwrOFF|NUMLK|     |     |     |     |   |     |     |     |     |     |      |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&bootloader        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&ext_power EP_OFF  &kp KP_NUM    &none         &none         &none         &none           &none         &none         &none         &none         &none         &ext_power EP_OFF
                                               &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
